import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import FSInputFile, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

TOKEN = "7639879991:AAHoQwhvD0yy4t6EM6DWiA-HoJcZsYzs44c"
ADMIN_ID = 123456789  # <-- ВСТАВ СВІЙ TELEGRAM ID

bot = Bot(token=TOKEN)
dp = Dispatcher()

# Стан для FSM
class ReviewStates(StatesGroup):
    waiting_for_review = State()

@dp.message(Command("start"))
async def start_handler(message: types.Message, state: FSMContext):
    kb = [
        [KeyboardButton(text="Манікюр"), KeyboardButton(text="Педикюр")],
        [KeyboardButton(text="Брови")],
        [KeyboardButton(text="Ціни"), KeyboardButton(text="Контакти")],
        [KeyboardButton(text="Відгуки")]
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)
    await message.answer(
        "Вітаємо у салоні краси! Оберіть, що вас цікавить:",
        reply_markup=keyboard
    )
    await state.clear()

@dp.message(F.text == "Манікюр")
async def manicure_handler(message: types.Message):
    caption = "Якщо ти дійсно бажаєш бути особлива - чекаємо на тебе! Усі твої забаганки на будь-який смак!"
    photo = FSInputFile("manicure.jpg")
    await message.answer_photo(photo=photo, caption=caption)

@dp.message(F.text == "Педикюр")
async def pedicure_handler(message: types.Message):
    caption = "Ми співпрацюємо з психлікарнею. 100% клієнтів залишились задоволеними (Але це не точно)"
    photo = FSInputFile("pedicure.jpg")
    await message.answer_photo(photo=photo, caption=caption)

@dp.message(F.text == "Брови")
async def brows_handler(message: types.Message):
    caption = "Наша фахівчиня вже зачекалась на тебе! Довірься їй як вона довіряє собі!"
    photo = FSInputFile("brows.jpg")
    await message.answer_photo(photo=photo, caption=caption)

@dp.message(F.text == "Ціни")
async def prices_handler(message: types.Message):
    await message.answer("💅 Манікюр — 400 грн\n🦶 Педикюр — 500 грн\n👁️ Брови — 300 грн")

@dp.message(F.text == "Контакти")
async def contacts_handler(message: types.Message):
    await message.answer("📍 Київ, вул. Краси, 1\n📞 +380 99 123 45 67\nInstagram: @your_salon")

# Відгуки: просимо написати відгук і переходимо у стан очікування
@dp.message(F.text == "Відгуки")
async def reviews_handler(message: types.Message, state: FSMContext):
    await message.answer("Напишіть свій відгук у відповідь на це повідомлення.")
    await state.set_state(ReviewStates.waiting_for_review)

# Приймаємо відгук у стані waiting_for_review і надсилаємо адміну
@dp.message(ReviewStates.waiting_for_review)
async def get_review(message: types.Message, state: FSMContext):
    user = message.from_user
    username = f"@{user.username}" if user.username else f"{user.first_name} {user.last_name or ''}".strip()
    text = f"Новий відгук від {username} (id: {user.id}):\n\n{message.text}"
    await bot.send_message(ADMIN_ID, text)
    await message.answer("Дякуємо за ваш відгук! 💖")
    await state.clear()

async def main():
    print("Бот працює! Чекаю команду /start у Telegram.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

ВАЖЛИВО:
Замініть ADMIN_ID = 123456789 на свій Telegram ID (дізнатися можна через @userinfobot).
Файли manicure.jpg, pedicure.jpg, brows.jpg мають бути у тій же папці, що й цей скрипт.
Якщо треба ще щось — пиши!
в телеграмі багато, близько 10 посилань на різних @userinfobot. Який мені обрати?

Вірно, у Telegram є багато ботів із подібною назвою, але тобі потрібен саме той, який:
має назву UserInfoBot
має юзернейм @userinfobot (без додаткових символів, цифр, слів)
має синю галочку (✅) або найбільшу кількість користувачів серед результатів
Офіційний і найпопулярніший — це
@userinfobot
Як ним скористатися:
Перейди за посиланням: https://t.me/userinfobot
Натисни "Start" або "Запустити".
Бот одразу надішле тобі твій Telegram ID.
ВАЖЛИВО:
Не використовуй ботів із назвами типу @userinfobot123, @userinfobot_ru, @userinfobot_pro тощо — це не оригінал.
Оригінальний бот простий, без реклами, і одразу показує твій ID.
Якщо виникнуть питання — пиши!
так, відгук написав. А де тепер його побачити?

Відгук, який написав користувач у боті, надсилається безпосередньо адміну (тобто тобі) у Telegram у вигляді особистого повідомлення від твого бота.
Як це працює:
Ти вказав свій Telegram ID у змінній ADMIN_ID у коді.
Коли хтось надсилає відгук, бот автоматично надсилає цей текст тобі в особисті повідомлення (від імені бота).
Де шукати відгук?
Відкрий чат із власним ботом у Telegram (той, токен якого ти використовуєш).
Перевір, чи є там нове повідомлення з текстом відгуку.
Повідомлення має виглядати приблизно так:
Apply
Якщо ти не отримав повідомлення:
Переконайся, що ти правильно вказав свій Telegram ID у змінній ADMIN_ID.
Переконайся, що ти писав боту хоча б раз (Telegram не дозволяє ботам писати користувачам, які їм не писали).
Перевір, чи не потрапило повідомлення у "Спам" або "Запити на листування".
Якщо не приходить повідомлення:
Перевір, чи ти писав своєму боту хоча б одне повідомлення (наприклад, /start). Інакше бот не зможе тобі написати.
Перевір, чи не помилився у Telegram ID.
Перезапусти бота після зміни ADMIN_ID.
Якщо все зроблено правильно — відгуки будуть приходити тобі у Telegram від твого бота!
Якщо не працює — напиши, що саме відбувається, і я допоможу знайти причину.
Ти готовий до більш серйозних завдань, до я створив план у якому багато пунктів та віконец та задач

Так, я готовий!
Можеш надсилати свій план, список задач, віконець чи будь-які деталі — я допоможу розібрати кожен пункт, запропоную оптимальні рішення, підкажу по коду, архітектурі, автоматизації, інтеграціях, аналітиці, дизайну тощо.
Як краще надіслати:
Можеш скинути весь план одним повідомленням.
Або поетапно, якщо зручно розбити на частини.
Можеш додати питання чи побажання до кожного пункту.
Я готовий працювати з будь-якою складністю!
Чекаю твій план 👇
тоді дивись уважно. Я створив план на аркуші паперу, і зараз спробую тобі текстово перенести що я хочу впровадити та який принцип архітектури будування. Але я залюбки вислухаю твої поради та як буде краще для реалізації та практичності якщо щось піде не так, домовились?

Домовились!
Я уважно прочитаю твій план, підкажу по кожному пункту, допоможу з архітектурою, практичними порадами, підкажу, як зробити зручніше, надійніше чи простіше для підтримки.
Якщо щось у твоєму плані можна оптимізувати або зробити сучасніше — я обов’язково запропоную варіанти, але рішення завжди за тобою.
Можеш надсилати текстовий опис, схему, перелік функцій, логіку віконець, ролі користувачів, інтеграції, будь-які деталі — все розгляну і допоможу!
Чекаю твій план!
Поїхали! Я хочу створити телеграм-бот, на кшталт того як ми робили попередній з салоном манікюру та педикюру. План: 1. При відкритті бота потрібно щоб з'явилось вікно з запитом на авторизацію "Поділитись номером телефону".  2. після авторизації з'являється текст "Привіт. Це чат-бот студії краси "Zhavoronok Space". Як я можу звертатись до тебе?". Користувач вводить текст, і саме за цим ім'ям у подальшому його кликати. 3. З'являється текст: "[Ім'я, вказане користувачем], обери що тебе цікавить" І під цим текстом варіанти вікон для вибору: "Онлайн запис", "Послуги та ціни", "Мої записи", "Контакти", "Акції та бонуси", "Залишити відгук". Початок такий, далі в мене ще є продовження цього плану, але я хочу проміжний результат на цьому етапі. Що скажеш?

Ти чудово сформулював початковий план!

Ось короткий аналіз і поради щодо кожного пункту, а також як це краще реалізувати на практиці:
1. Запит на авторизацію — "Поділитись номером телефону"
Telegram дозволяє отримати номер лише через кнопку з параметром request_contact=True.
Це має бути ReplyKeyboardMarkup з однією кнопкою "Поділитись номером".
Поки користувач не поділиться номером, інші дії недоступні.
Порада:
Зберігати номер і Telegram ID у простій базі (наприклад, SQLite або навіть у файлі для MVP).
2. Після авторизації — запит імені
Після отримання номера надсилаємо повідомлення:
"Привіт. Це чат-бот студії краси "Zhavoronok Space". Як я можу звертатись до тебе?"
Чекаємо текстову відповідь користувача.
Зберігаємо це ім'я (у базу або файл, прив'язавши до Telegram ID).
3. Вітання та меню
Після отримання імені — персоналізоване вітання:
"[Ім'я], обери що тебе цікавить"
Під цим текстом — меню з кнопками:
Онлайн запис
Послуги та ціни
Мої записи
Контакти
Акції та бонуси
Залишити відгук
Архітектурні поради:
Для збереження стану (номер, ім'я) використовуй FSM (Finite State Machine) з aiogram.
Для зберігання даних — SQLite (легко, не потребує окремого сервера, підходить для MVP).
Всі дії після авторизації — тільки для тих, хто поділився номером.
Якщо користувач не поділився номером — постійно показувати кнопку "Поділитись номером".
Проміжний результат
Після виконання цих трьох кроків у тебе буде:
База користувачів із Telegram ID, номером і ім'ям.
Персоналізоване меню для кожного користувача.
Готова основа для розширення функціоналу (онлайн-запис, відгуки тощо).
Готовий допомогти з кодом!
Якщо хочеш — я можу написати повністю робочий код для цього етапу (з FSM, збереженням номера та імені, меню).
Підтверди, чи рухаємося далі, і чи є побажання щодо зберігання даних (файл, SQLite, інше)?
Якщо все ок — одразу напишу код!